/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as ProductsIndexImport } from './routes/products/index'
import { Route as CustomersIndexImport } from './routes/customers/index'
import { Route as ProductsAddImport } from './routes/products/add'
import { Route as CustomersAddImport } from './routes/customers/add'
import { Route as CustomerCustomerIdRouteImport } from './routes/customer/$customerId/route'
import { Route as CustomerCustomerIdIndexImport } from './routes/customer/$customerId/index'
import { Route as ProductsProductIdDetailsImport } from './routes/products/$productId/details'
import { Route as CustomersCustomerIdEditImport } from './routes/customers/$customerId/edit'
import { Route as CustomerCustomerIdStatementImport } from './routes/customer/$customerId/statement'
import { Route as CustomerCustomerIdDetailImport } from './routes/customer/$customerId/detail'
import { Route as CustomerCustomerIdReturnsIndexImport } from './routes/customer/$customerId/returns/index'
import { Route as CustomerCustomerIdOrdersIndexImport } from './routes/customer/$customerId/orders/index'
import { Route as CustomerCustomerIdCollectionsIndexImport } from './routes/customer/$customerId/collections/index'
import { Route as CustomerCustomerIdOrdersAddImport } from './routes/customer/$customerId/orders/add'
import { Route as CustomerCustomerIdOrdersOrderIdDetailsImport } from './routes/customer/$customerId/orders/$orderId/details'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIndexRoute = ProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any)

const CustomersIndexRoute = CustomersIndexImport.update({
  id: '/customers/',
  path: '/customers/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsAddRoute = ProductsAddImport.update({
  id: '/products/add',
  path: '/products/add',
  getParentRoute: () => rootRoute,
} as any)

const CustomersAddRoute = CustomersAddImport.update({
  id: '/customers/add',
  path: '/customers/add',
  getParentRoute: () => rootRoute,
} as any)

const CustomerCustomerIdRouteRoute = CustomerCustomerIdRouteImport.update({
  id: '/customer/$customerId',
  path: '/customer/$customerId',
  getParentRoute: () => rootRoute,
} as any)

const CustomerCustomerIdIndexRoute = CustomerCustomerIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CustomerCustomerIdRouteRoute,
} as any)

const ProductsProductIdDetailsRoute = ProductsProductIdDetailsImport.update({
  id: '/products/$productId/details',
  path: '/products/$productId/details',
  getParentRoute: () => rootRoute,
} as any)

const CustomersCustomerIdEditRoute = CustomersCustomerIdEditImport.update({
  id: '/customers/$customerId/edit',
  path: '/customers/$customerId/edit',
  getParentRoute: () => rootRoute,
} as any)

const CustomerCustomerIdStatementRoute =
  CustomerCustomerIdStatementImport.update({
    id: '/statement',
    path: '/statement',
    getParentRoute: () => CustomerCustomerIdRouteRoute,
  } as any)

const CustomerCustomerIdDetailRoute = CustomerCustomerIdDetailImport.update({
  id: '/detail',
  path: '/detail',
  getParentRoute: () => CustomerCustomerIdRouteRoute,
} as any)

const CustomerCustomerIdReturnsIndexRoute =
  CustomerCustomerIdReturnsIndexImport.update({
    id: '/returns/',
    path: '/returns/',
    getParentRoute: () => CustomerCustomerIdRouteRoute,
  } as any)

const CustomerCustomerIdOrdersIndexRoute =
  CustomerCustomerIdOrdersIndexImport.update({
    id: '/orders/',
    path: '/orders/',
    getParentRoute: () => CustomerCustomerIdRouteRoute,
  } as any)

const CustomerCustomerIdCollectionsIndexRoute =
  CustomerCustomerIdCollectionsIndexImport.update({
    id: '/collections/',
    path: '/collections/',
    getParentRoute: () => CustomerCustomerIdRouteRoute,
  } as any)

const CustomerCustomerIdOrdersAddRoute =
  CustomerCustomerIdOrdersAddImport.update({
    id: '/orders/add',
    path: '/orders/add',
    getParentRoute: () => CustomerCustomerIdRouteRoute,
  } as any)

const CustomerCustomerIdOrdersOrderIdDetailsRoute =
  CustomerCustomerIdOrdersOrderIdDetailsImport.update({
    id: '/orders/$orderId/details',
    path: '/orders/$orderId/details',
    getParentRoute: () => CustomerCustomerIdRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/customer/$customerId': {
      id: '/customer/$customerId'
      path: '/customer/$customerId'
      fullPath: '/customer/$customerId'
      preLoaderRoute: typeof CustomerCustomerIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/customers/add': {
      id: '/customers/add'
      path: '/customers/add'
      fullPath: '/customers/add'
      preLoaderRoute: typeof CustomersAddImport
      parentRoute: typeof rootRoute
    }
    '/products/add': {
      id: '/products/add'
      path: '/products/add'
      fullPath: '/products/add'
      preLoaderRoute: typeof ProductsAddImport
      parentRoute: typeof rootRoute
    }
    '/customers/': {
      id: '/customers/'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof CustomersIndexImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/customer/$customerId/detail': {
      id: '/customer/$customerId/detail'
      path: '/detail'
      fullPath: '/customer/$customerId/detail'
      preLoaderRoute: typeof CustomerCustomerIdDetailImport
      parentRoute: typeof CustomerCustomerIdRouteImport
    }
    '/customer/$customerId/statement': {
      id: '/customer/$customerId/statement'
      path: '/statement'
      fullPath: '/customer/$customerId/statement'
      preLoaderRoute: typeof CustomerCustomerIdStatementImport
      parentRoute: typeof CustomerCustomerIdRouteImport
    }
    '/customers/$customerId/edit': {
      id: '/customers/$customerId/edit'
      path: '/customers/$customerId/edit'
      fullPath: '/customers/$customerId/edit'
      preLoaderRoute: typeof CustomersCustomerIdEditImport
      parentRoute: typeof rootRoute
    }
    '/products/$productId/details': {
      id: '/products/$productId/details'
      path: '/products/$productId/details'
      fullPath: '/products/$productId/details'
      preLoaderRoute: typeof ProductsProductIdDetailsImport
      parentRoute: typeof rootRoute
    }
    '/customer/$customerId/': {
      id: '/customer/$customerId/'
      path: '/'
      fullPath: '/customer/$customerId/'
      preLoaderRoute: typeof CustomerCustomerIdIndexImport
      parentRoute: typeof CustomerCustomerIdRouteImport
    }
    '/customer/$customerId/orders/add': {
      id: '/customer/$customerId/orders/add'
      path: '/orders/add'
      fullPath: '/customer/$customerId/orders/add'
      preLoaderRoute: typeof CustomerCustomerIdOrdersAddImport
      parentRoute: typeof CustomerCustomerIdRouteImport
    }
    '/customer/$customerId/collections/': {
      id: '/customer/$customerId/collections/'
      path: '/collections'
      fullPath: '/customer/$customerId/collections'
      preLoaderRoute: typeof CustomerCustomerIdCollectionsIndexImport
      parentRoute: typeof CustomerCustomerIdRouteImport
    }
    '/customer/$customerId/orders/': {
      id: '/customer/$customerId/orders/'
      path: '/orders'
      fullPath: '/customer/$customerId/orders'
      preLoaderRoute: typeof CustomerCustomerIdOrdersIndexImport
      parentRoute: typeof CustomerCustomerIdRouteImport
    }
    '/customer/$customerId/returns/': {
      id: '/customer/$customerId/returns/'
      path: '/returns'
      fullPath: '/customer/$customerId/returns'
      preLoaderRoute: typeof CustomerCustomerIdReturnsIndexImport
      parentRoute: typeof CustomerCustomerIdRouteImport
    }
    '/customer/$customerId/orders/$orderId/details': {
      id: '/customer/$customerId/orders/$orderId/details'
      path: '/orders/$orderId/details'
      fullPath: '/customer/$customerId/orders/$orderId/details'
      preLoaderRoute: typeof CustomerCustomerIdOrdersOrderIdDetailsImport
      parentRoute: typeof CustomerCustomerIdRouteImport
    }
  }
}

// Create and export the route tree

interface CustomerCustomerIdRouteRouteChildren {
  CustomerCustomerIdDetailRoute: typeof CustomerCustomerIdDetailRoute
  CustomerCustomerIdStatementRoute: typeof CustomerCustomerIdStatementRoute
  CustomerCustomerIdIndexRoute: typeof CustomerCustomerIdIndexRoute
  CustomerCustomerIdOrdersAddRoute: typeof CustomerCustomerIdOrdersAddRoute
  CustomerCustomerIdCollectionsIndexRoute: typeof CustomerCustomerIdCollectionsIndexRoute
  CustomerCustomerIdOrdersIndexRoute: typeof CustomerCustomerIdOrdersIndexRoute
  CustomerCustomerIdReturnsIndexRoute: typeof CustomerCustomerIdReturnsIndexRoute
  CustomerCustomerIdOrdersOrderIdDetailsRoute: typeof CustomerCustomerIdOrdersOrderIdDetailsRoute
}

const CustomerCustomerIdRouteRouteChildren: CustomerCustomerIdRouteRouteChildren =
  {
    CustomerCustomerIdDetailRoute: CustomerCustomerIdDetailRoute,
    CustomerCustomerIdStatementRoute: CustomerCustomerIdStatementRoute,
    CustomerCustomerIdIndexRoute: CustomerCustomerIdIndexRoute,
    CustomerCustomerIdOrdersAddRoute: CustomerCustomerIdOrdersAddRoute,
    CustomerCustomerIdCollectionsIndexRoute:
      CustomerCustomerIdCollectionsIndexRoute,
    CustomerCustomerIdOrdersIndexRoute: CustomerCustomerIdOrdersIndexRoute,
    CustomerCustomerIdReturnsIndexRoute: CustomerCustomerIdReturnsIndexRoute,
    CustomerCustomerIdOrdersOrderIdDetailsRoute:
      CustomerCustomerIdOrdersOrderIdDetailsRoute,
  }

const CustomerCustomerIdRouteRouteWithChildren =
  CustomerCustomerIdRouteRoute._addFileChildren(
    CustomerCustomerIdRouteRouteChildren,
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/customer/$customerId': typeof CustomerCustomerIdRouteRouteWithChildren
  '/customers/add': typeof CustomersAddRoute
  '/products/add': typeof ProductsAddRoute
  '/customers': typeof CustomersIndexRoute
  '/products': typeof ProductsIndexRoute
  '/customer/$customerId/detail': typeof CustomerCustomerIdDetailRoute
  '/customer/$customerId/statement': typeof CustomerCustomerIdStatementRoute
  '/customers/$customerId/edit': typeof CustomersCustomerIdEditRoute
  '/products/$productId/details': typeof ProductsProductIdDetailsRoute
  '/customer/$customerId/': typeof CustomerCustomerIdIndexRoute
  '/customer/$customerId/orders/add': typeof CustomerCustomerIdOrdersAddRoute
  '/customer/$customerId/collections': typeof CustomerCustomerIdCollectionsIndexRoute
  '/customer/$customerId/orders': typeof CustomerCustomerIdOrdersIndexRoute
  '/customer/$customerId/returns': typeof CustomerCustomerIdReturnsIndexRoute
  '/customer/$customerId/orders/$orderId/details': typeof CustomerCustomerIdOrdersOrderIdDetailsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/customers/add': typeof CustomersAddRoute
  '/products/add': typeof ProductsAddRoute
  '/customers': typeof CustomersIndexRoute
  '/products': typeof ProductsIndexRoute
  '/customer/$customerId/detail': typeof CustomerCustomerIdDetailRoute
  '/customer/$customerId/statement': typeof CustomerCustomerIdStatementRoute
  '/customers/$customerId/edit': typeof CustomersCustomerIdEditRoute
  '/products/$productId/details': typeof ProductsProductIdDetailsRoute
  '/customer/$customerId': typeof CustomerCustomerIdIndexRoute
  '/customer/$customerId/orders/add': typeof CustomerCustomerIdOrdersAddRoute
  '/customer/$customerId/collections': typeof CustomerCustomerIdCollectionsIndexRoute
  '/customer/$customerId/orders': typeof CustomerCustomerIdOrdersIndexRoute
  '/customer/$customerId/returns': typeof CustomerCustomerIdReturnsIndexRoute
  '/customer/$customerId/orders/$orderId/details': typeof CustomerCustomerIdOrdersOrderIdDetailsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/customer/$customerId': typeof CustomerCustomerIdRouteRouteWithChildren
  '/customers/add': typeof CustomersAddRoute
  '/products/add': typeof ProductsAddRoute
  '/customers/': typeof CustomersIndexRoute
  '/products/': typeof ProductsIndexRoute
  '/customer/$customerId/detail': typeof CustomerCustomerIdDetailRoute
  '/customer/$customerId/statement': typeof CustomerCustomerIdStatementRoute
  '/customers/$customerId/edit': typeof CustomersCustomerIdEditRoute
  '/products/$productId/details': typeof ProductsProductIdDetailsRoute
  '/customer/$customerId/': typeof CustomerCustomerIdIndexRoute
  '/customer/$customerId/orders/add': typeof CustomerCustomerIdOrdersAddRoute
  '/customer/$customerId/collections/': typeof CustomerCustomerIdCollectionsIndexRoute
  '/customer/$customerId/orders/': typeof CustomerCustomerIdOrdersIndexRoute
  '/customer/$customerId/returns/': typeof CustomerCustomerIdReturnsIndexRoute
  '/customer/$customerId/orders/$orderId/details': typeof CustomerCustomerIdOrdersOrderIdDetailsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/customer/$customerId'
    | '/customers/add'
    | '/products/add'
    | '/customers'
    | '/products'
    | '/customer/$customerId/detail'
    | '/customer/$customerId/statement'
    | '/customers/$customerId/edit'
    | '/products/$productId/details'
    | '/customer/$customerId/'
    | '/customer/$customerId/orders/add'
    | '/customer/$customerId/collections'
    | '/customer/$customerId/orders'
    | '/customer/$customerId/returns'
    | '/customer/$customerId/orders/$orderId/details'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/customers/add'
    | '/products/add'
    | '/customers'
    | '/products'
    | '/customer/$customerId/detail'
    | '/customer/$customerId/statement'
    | '/customers/$customerId/edit'
    | '/products/$productId/details'
    | '/customer/$customerId'
    | '/customer/$customerId/orders/add'
    | '/customer/$customerId/collections'
    | '/customer/$customerId/orders'
    | '/customer/$customerId/returns'
    | '/customer/$customerId/orders/$orderId/details'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/customer/$customerId'
    | '/customers/add'
    | '/products/add'
    | '/customers/'
    | '/products/'
    | '/customer/$customerId/detail'
    | '/customer/$customerId/statement'
    | '/customers/$customerId/edit'
    | '/products/$productId/details'
    | '/customer/$customerId/'
    | '/customer/$customerId/orders/add'
    | '/customer/$customerId/collections/'
    | '/customer/$customerId/orders/'
    | '/customer/$customerId/returns/'
    | '/customer/$customerId/orders/$orderId/details'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  CustomerCustomerIdRouteRoute: typeof CustomerCustomerIdRouteRouteWithChildren
  CustomersAddRoute: typeof CustomersAddRoute
  ProductsAddRoute: typeof ProductsAddRoute
  CustomersIndexRoute: typeof CustomersIndexRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
  CustomersCustomerIdEditRoute: typeof CustomersCustomerIdEditRoute
  ProductsProductIdDetailsRoute: typeof ProductsProductIdDetailsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  CustomerCustomerIdRouteRoute: CustomerCustomerIdRouteRouteWithChildren,
  CustomersAddRoute: CustomersAddRoute,
  ProductsAddRoute: ProductsAddRoute,
  CustomersIndexRoute: CustomersIndexRoute,
  ProductsIndexRoute: ProductsIndexRoute,
  CustomersCustomerIdEditRoute: CustomersCustomerIdEditRoute,
  ProductsProductIdDetailsRoute: ProductsProductIdDetailsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/customer/$customerId",
        "/customers/add",
        "/products/add",
        "/customers/",
        "/products/",
        "/customers/$customerId/edit",
        "/products/$productId/details"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/customer/$customerId": {
      "filePath": "customer/$customerId/route.tsx",
      "children": [
        "/customer/$customerId/detail",
        "/customer/$customerId/statement",
        "/customer/$customerId/",
        "/customer/$customerId/orders/add",
        "/customer/$customerId/collections/",
        "/customer/$customerId/orders/",
        "/customer/$customerId/returns/",
        "/customer/$customerId/orders/$orderId/details"
      ]
    },
    "/customers/add": {
      "filePath": "customers/add.tsx"
    },
    "/products/add": {
      "filePath": "products/add.tsx"
    },
    "/customers/": {
      "filePath": "customers/index.tsx"
    },
    "/products/": {
      "filePath": "products/index.tsx"
    },
    "/customer/$customerId/detail": {
      "filePath": "customer/$customerId/detail.tsx",
      "parent": "/customer/$customerId"
    },
    "/customer/$customerId/statement": {
      "filePath": "customer/$customerId/statement.tsx",
      "parent": "/customer/$customerId"
    },
    "/customers/$customerId/edit": {
      "filePath": "customers/$customerId/edit.tsx"
    },
    "/products/$productId/details": {
      "filePath": "products/$productId/details.tsx"
    },
    "/customer/$customerId/": {
      "filePath": "customer/$customerId/index.tsx",
      "parent": "/customer/$customerId"
    },
    "/customer/$customerId/orders/add": {
      "filePath": "customer/$customerId/orders/add.tsx",
      "parent": "/customer/$customerId"
    },
    "/customer/$customerId/collections/": {
      "filePath": "customer/$customerId/collections/index.tsx",
      "parent": "/customer/$customerId"
    },
    "/customer/$customerId/orders/": {
      "filePath": "customer/$customerId/orders/index.tsx",
      "parent": "/customer/$customerId"
    },
    "/customer/$customerId/returns/": {
      "filePath": "customer/$customerId/returns/index.tsx",
      "parent": "/customer/$customerId"
    },
    "/customer/$customerId/orders/$orderId/details": {
      "filePath": "customer/$customerId/orders/$orderId/details.tsx",
      "parent": "/customer/$customerId"
    }
  }
}
ROUTE_MANIFEST_END */
